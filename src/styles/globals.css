@import "tailwindcss";

@plugin 'tailwindcss-radix';
@plugin '@tailwindcss/typography';

@variant dark (&:is(.dark *));

@theme {
  --font-sans: var(--font-geist-sans), ui-sans-serif, system-ui, sans-serif,
    "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-mono: var(--font-geist-mono), ui-monospace, SFMono-Regular, Menlo,
    Monaco, Consolas, "Liberation Mono", "Courier New", monospace;

  --animate-fade: animate-opacity 250ms ease-in-out forwards;
  --animate-menu-in: menu-in 250ms ease-in-out forwards;
  --animate-menu-out: menu-out 250ms ease-in-out forwards;
  --animate-enter: enter 1s ease-in-out both;

  @keyframes menu-in {
    0% {
      opacity: 0;
      transform: translateY(8px);
    }
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
  }

  @keyframes menu-out {
    0% {
      opacity: 1;
      transform: translateY(0px);
    }
    100% {
      opacity: 0;
      transform: translateY(8px);
    }
  }

  @keyframes enter {
    0% {
      opacity: 0;
      transform: translateY(10px);
      filter: blur(3px);
    }
    100% {
      opacity: 1;
      transform: translateY(0px);
      filter: blur(0px);
    }
  }
}

/*
  In Tailwind CSS v4, basic styles are applied to form elements by default. To
  maintain compatibility with v3, the following resets have been added:
*/
@layer base {
  input,
  textarea,
  select,
  button {
    border: 0px solid;
    border-radius: 0;
    padding: 0;
    color: inherit;
    background-color: transparent;
  }
}

/*
  The default border color has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentColor);
  }
}

@layer utilities {
  [data-focus-mode="true"] {
    & *:not(:focus-within):first-child {
      @apply blur-none;
    }

    & *:not(.focused) {
      @apply blur-xs;
    }

    & *:is(.focused) {
      @apply blur-none;
    }
  }

  .editor {
    & > * {
      @apply transition-all duration-250;
    }
  }
}

@utility editor {
  & h1.is-empty {
    @apply first:before:pointer-events-none first:before:float-left first:before:h-0 first:before:text-sm first:before:text-neutral-500 first:before:content-[attr(data-placeholder)];
  }

  .editor &h1 {
    @apply first:before:pointer-events-none first:before:hidden first:before:float-left first:before:h-0 first:before:text-sm first:before:text-neutral-500 first:before:content-[attr(data-placeholder)];
  }
}
